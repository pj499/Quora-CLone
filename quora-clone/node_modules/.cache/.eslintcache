[{"C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\index.js":"2","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\App.js":"3","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\pages\\SignIn.js":"4","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\Signup.js":"5","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\VerifyEmail.js":"6"},{"size":359,"mtime":1670320503513,"results":"7","hashOfConfig":"8"},{"size":0,"mtime":1666973019682,"results":"9","hashOfConfig":"8"},{"size":608,"mtime":1670320511289,"results":"10","hashOfConfig":"8"},{"size":4838,"mtime":1670327340842,"results":"11","hashOfConfig":"8"},{"size":5225,"mtime":1670329051373,"results":"12","hashOfConfig":"8"},{"size":4315,"mtime":1670376639937,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1mk67i3",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\index.js",[],[],[],"C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\index.js",[],[],"C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\App.js",["36","37"],[],"import '../styles/App.css';\nimport SignIn from '../pages/SignIn';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"top-center\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover theme=\"dark\"/>\n      <Routes>\n          <Route path='/' element={<SignIn/>}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\pages\\SignIn.js",["38","39","40","41","42","43","44","45","46"],[],"import React, { useState } from \"react\";\r\nimport styles from \"../styles/Signin.module.css\";\r\nimport logo from \"../assets/images/logo.png\";\r\nimport googleLogin from \"../assets/images/googleLogin.png\";\r\nimport SignUp from \"../componets/Signup\";\r\nimport VerifyEmail from \"../componets/VerifyEmail\";\r\n\r\nfunction SignIn ()  {\r\n  const [showSignUp, setShowSignUp] = useState(false);\r\n  const [isNextSignUp, setIsNextSignUp] = useState(false);\r\n\r\n\r\n  function handleCloseSignUp (){\r\n    setShowSignUp(false);\r\n  }\r\n\r\n  function handleCloseVerifyEmail(){\r\n    setIsNextSignUp(false);\r\n  }\r\n  function handleIsNextSignUp(){\r\n    setShowSignUp(false);\r\n    setIsNextSignUp(true);\r\n  }\r\n  function handleCloseVerifyEmail(){\r\n  }\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n    return (\r\n      <>\r\n      {showSignUp && <SignUp onNextClick={handleIsNextSignUp} onSignUpClose={handleCloseSignUp}/>}\r\n      {isNextSignUp && <VerifyEmail onClose={handleCloseVerifyEmail} onNextClick={handleCloseVerifyEmail}/>}\r\n      <div className={styles.Outer}>\r\n        <div className={styles.loginContainer}>\r\n          <div className={styles.title}>\r\n            <img src={logo} style={{ width: \"23%\" }}></img>\r\n            <h4 style={{ margin: \"0\" }}>\r\n              A place to share knowledge and better understand the world\r\n            </h4>\r\n          </div>\r\n          <div className={styles.loginInfo}>\r\n            <div className={styles.socialMediaLogin}>\r\n              <p>\r\n                By continuing you indicate that you agree to Quoraâ€™s{\" \"}\r\n                <a\r\n                  className={styles.aTagStyle}\r\n                  href=\"https://www.quora.com/about/tos\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Terms of Service\r\n                </a>{\" \"}\r\n                and{\" \"}\r\n                <a\r\n                  className={styles.aTagStyle}\r\n                  href=\"https://www.quora.com/about/privacy\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Privacy Policy\r\n                </a>\r\n                .\r\n              </p>\r\n              <button type=\"button\" className={styles.googleLogin}>\r\n                <img\r\n                  style={{\r\n                    width: \"10%\",\r\n                    marginRight: \"25px\",\r\n                    padding: \"5px\",\r\n                    backgroundColor: \"transparent\",\r\n                  }}\r\n                  src={googleLogin}\r\n                ></img>\r\n                Continue with Google\r\n              </button>\r\n              <button  type=\"button\"\r\n                className={styles.signupButton}\r\n                onClick={() => setShowSignUp(true)}\r\n              >\r\n                Sign up with email\r\n              </button>\r\n            </div>\r\n            <div className={styles.loginDivider}></div>\r\n            <div className={styles.manualLogin}>\r\n              <h4\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontWeight: \"lighter\",\r\n                  marginBottom: \"0\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                Login\r\n              </h4>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"0\",\r\n                  borderTop: \"1px solid lightgray\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              ></div>\r\n\r\n              <form action=\"\" method=\"\">\r\n                <div className={styles.formInputDiv}>\r\n                  <label>\r\n                    <h5 className={styles.formLabel}>Email</h5>\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Your email\"\r\n                    className={styles.formInput}\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className={styles.formInputDiv}>\r\n                  <label>\r\n                    <h5 className={styles.formLabel}>Password</h5>\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Your password\"\r\n                    className={styles.formInput}\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className={styles.formButton}>\r\n                  <h5 style={{ fontWeight: \"lighter\", color: \"gray\" }}>\r\n                    Forgot password?\r\n                  </h5>\r\n                  <button type=\"submit\" className={styles.formLoginButton} disabled>\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          {/* <div className={styles.loginFooter}>\r\n\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\Signup.js",["47","48","49"],[],"import styles from \"../styles/signup.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport signinStyles from \"../styles/Signin.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport validator from 'validator';\r\nimport {toast} from 'react-toastify'\r\n\r\nfunction SignUp(props) {\r\n  const [goNext, setGoNext]= useState(false);\r\n  const [name, setName]= useState('');\r\n  const [email, setEmail]= useState('');\r\n  const [isEmailValid, setIsEmailValid]= useState(true);\r\n  const [isNameValid, setIsNameValid]= useState(true);\r\n  const [isNameBlank, setIsNameBlank]= useState(true);\r\n  const [isEmailBlank, setIsEmailBlank]= useState(true);\r\n\r\n  async function handleName(name){\r\n    setName(name);\r\n    if(name.length >=3 && /^[A-Za-z]*$/.test(name)){\r\n      setIsNameValid(true);\r\n      setIsNameBlank(false)\r\n    }else{\r\n      setIsNameValid(false);\r\n      setIsNameBlank(false)\r\n    }\r\n    if(name.length===0)\r\n      setIsNameBlank(true);\r\n\r\n    if(isEmailValid && isNameValid && !isNameBlank && !isEmailBlank){\r\n      setGoNext(true);\r\n    }else{\r\n      setGoNext(false);\r\n    }\r\n  }\r\n  function handleEmail(email){\r\n    // console.log('email in handler: ',email);\r\n    setEmail(email);\r\n    if(validator.isEmail(email)){\r\n      setIsEmailValid(true);\r\n      setIsEmailBlank(false);\r\n    }else{\r\n      setIsEmailValid(false);\r\n      setIsEmailBlank(false);\r\n    }\r\n\r\n    if(email.length===0)\r\n      setIsEmailBlank(true);\r\n\r\n    if(isEmailValid && isNameValid && !isNameBlank && !isEmailBlank){\r\n      setGoNext(true);\r\n    }else{\r\n      setGoNext(false);\r\n    }\r\n  } \r\n\r\n  const handleSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    const url= 'http://localhost:8000/sendVerificationMail';\r\n    const dataToSubmit={\r\n      name: name,\r\n      email: email\r\n    }\r\n    const response= await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(dataToSubmit)\r\n    })\r\n    console.log('response :', response)\r\n    if(response.status== 200){\r\n      props.onNextClick();\r\n    }\r\n    if(response.status== 409){\r\n      toast.error('Email already exist!', {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"dark\",\r\n        });\r\n        e.target[1].value=\"\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleName(name);\r\n    handleEmail(email);\r\n  }, [name, email, isEmailValid, isNameValid,goNext,isEmailBlank, isNameBlank])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className={styles.signUpContainer}></div>\r\n      <div className={styles.signUpBox}>\r\n        <button\r\n          className={styles.signupCloseButton}\r\n          onClick={props.onSignUpClose}\r\n        >\r\n          <FontAwesomeIcon icon={faXmark} size=\"lg\" />\r\n        </button>\r\n        <div className={styles.signUpInfo} >\r\n          <h3\r\n            style={{ fontSize: \"18px\", fontWeight: \"1000\", lineHeight: \"25px\" }}\r\n          >\r\n            Sign up\r\n          </h3>\r\n\r\n          <form action='' method=\"post\"  style={{width: '100%'}} onSubmit={handleSubmit}>\r\n            <div className={signinStyles.formInputDiv} style={{width: '90%'}}>\r\n              <label>\r\n                <h5 className={signinStyles.formLabel}>Name</h5>\r\n              </label>\r\n              <input\r\n                type=\"text\" name=\"name\"\r\n                placeholder=\"What would you like to be called?\"\r\n                className={(!isNameValid && !isNameBlank)? styles.invalidInputError :signinStyles.formInput}\r\n                style={{width: '100%'}}\r\n                onChange={(e)=> handleName(e.target.value)}\r\n              ></input>\r\n              {(!isNameValid && !isNameBlank)? <div className={styles.invalidInputBox}>\r\n             Minimum name length should be 3.\r\n              </div> :null}\r\n            </div>\r\n\r\n            <div className={signinStyles.formInputDiv} style={{width: '90%'}}>\r\n              <label>\r\n                <h5 className={signinStyles.formLabel}>Email</h5>\r\n              </label>\r\n              <input\r\n                type=\"email\" name=\"email\"\r\n                placeholder=\"Your email\"\r\n                className={(!isEmailValid && !isEmailBlank)?  styles.invalidInputError: signinStyles.formInput}\r\n                style={{width: '100%'}}\r\n                onChange={(e)=> handleEmail(e.target.value)}\r\n              ></input>\r\n             {(!isEmailValid && !isEmailBlank)? <div className={styles.invalidInputBox}>\r\n             The email address you entered is not valid.\r\n              </div> :null}\r\n            </div>\r\n\r\n            <div style={{ width: '100%', borderBottom: '1px solid lightGray', marginTop: '35px'}}>\r\n\r\n            </div>\r\n            <button  type=\"sbumit\" className={signinStyles.formLoginButton} disabled={!goNext}\r\n            style={{width: '15%', marginTop: '10px', position: 'relative', left: '40%'}}\r\n            >\r\n              Next\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\HP\\Desktop\\My React Projects\\Quora Clone\\quora-clone\\src\\componets\\VerifyEmail.js",["50","51","52","53","54"],[],{"ruleId":"55","severity":1,"message":"56","line":3,"column":26,"nodeType":"57","messageId":"58","endLine":3,"endColumn":32},{"ruleId":"55","severity":1,"message":"59","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":24,"column":12,"nodeType":"57","messageId":"62","endLine":24,"endColumn":34},{"ruleId":"55","severity":1,"message":"63","line":26,"column":10,"nodeType":"57","messageId":"58","endLine":26,"endColumn":15},{"ruleId":"55","severity":1,"message":"64","line":26,"column":17,"nodeType":"57","messageId":"58","endLine":26,"endColumn":25},{"ruleId":"55","severity":1,"message":"65","line":27,"column":10,"nodeType":"57","messageId":"58","endLine":27,"endColumn":18},{"ruleId":"55","severity":1,"message":"66","line":27,"column":20,"nodeType":"57","messageId":"58","endLine":27,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":36,"column":13,"nodeType":"69","endLine":36,"endColumn":54},{"ruleId":"70","severity":1,"message":"71","line":45,"column":17,"nodeType":"69","messageId":"72","endLine":49,"endColumn":18,"fix":"73"},{"ruleId":"70","severity":1,"message":"71","line":53,"column":17,"nodeType":"69","messageId":"72","endLine":57,"endColumn":18,"fix":"74"},{"ruleId":"67","severity":1,"message":"68","line":63,"column":17,"nodeType":"69","endLine":71,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":72,"column":23,"nodeType":"77","messageId":"78","endLine":72,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":75,"column":23,"nodeType":"77","messageId":"78","endLine":75,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":93,"column":6,"nodeType":"81","endLine":93,"endColumn":79,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"76","line":21,"column":43,"nodeType":"77","messageId":"78","endLine":21,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":35,"column":20,"nodeType":"77","messageId":"78","endLine":35,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":63,"column":23,"nodeType":"77","messageId":"78","endLine":63,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":66,"column":23,"nodeType":"77","messageId":"78","endLine":66,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":83,"column":6,"nodeType":"81","endLine":83,"endColumn":20,"suggestions":"84"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","no-redeclare","'handleCloseVerifyEmail' is already defined.","redeclared","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"85","text":"86"},{"range":"87","text":"86"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleEmail' and 'handleName'. Either include them or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'handleOtp'. Either include it or remove the dependency array.",["89"],[1746,1746]," rel=\"noreferrer\"",[2019,2019],{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [name, email, isEmailValid, isNameValid, goNext, isEmailBlank, isNameBlank, handleName, handleEmail]",{"range":"94","text":"95"},"Update the dependencies array to be: [otp, isSubmit, handleOtp]",{"range":"96","text":"97"},[2603,2676],"[name, email, isEmailValid, isNameValid, goNext, isEmailBlank, isNameBlank, handleName, handleEmail]",[2221,2235],"[otp, isSubmit, handleOtp]"]